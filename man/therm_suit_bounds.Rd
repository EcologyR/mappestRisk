% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/therm_suit_bounds.R
\name{therm_suit_bounds}
\alias{therm_suit_bounds}
\title{Calculate thermal boundaries delimiting the optimal region of the fitted TPC.}
\usage{
therm_suit_bounds(preds_tbl, model_name, suitability_threshold = 75)
}
\arguments{
\item{preds_tbl}{a \code{tibble} object inherited from \code{\link[=predict_curves]{predict_curves()}}
with as many curves -TPCs- as the number of iterations provided in \code{n_boots_samples} argument
therein whenever \code{propagate_uncertainty} was set to \code{TRUE}, or alternatively simply the
estimated TPC predictions if \code{propagate_uncertainty} was set to \code{FALSE}.
Each TPC in this \code{tibble}  consist of a collection of predictions for a set
of temperatures from \code{temp - 20} to \code{temp + 15} with a resolution of 0.1ÂºC and a unique identifier called \code{iter}.
In addition to the uncertainty TPCs, the estimate TPC is also explicit in the output tibble.}

\item{model_name}{a string with one or several TPC models of those fitted first in \code{fit_devmodels()} and predicted
next in \code{predict_curves()}. Setting \code{model_name = "all"} is not allowed in this function. If the user wants to
calculate thermal boundaries for several models predicted and/or bootstrapped in \code{predict_curves()}, typing manually
all desired model names within a vector will be required.}

\item{suitability_threshold}{a numeric value from 50 to 100 representing the quantile of
the curve that provides the user-defined optimal performance. For example, by setting \code{suitability_threshold} to
80, the function will give the thermal boundaries determining the  top 20\% (or quartile 80) of the maximum
values of the development rate predicted by the chosen TPC model. If \code{suitability_threshold} equals 100, the function returns
the optimum temperature for development rate.}
}
\value{
a \code{tibble} with six columns:
\itemize{
\item \code{model_name}: a string indicating the selected TPC model to make projections
\item \code{suitability}: a string indicating the suitability threshold in percentage (see \code{suitability_threshold})
\item \code{tval_left}:a number representing the lower thermal boundary delimiting suitable region of the TPC
\item \code{tval_right}: a number representing the upper thermal boundary delimiting the suitable region of the TPC
\item \code{pred_suit}: a number corresponding to the predicted development rate value determining que chosen quantile threshold
of the maximum rate (i.e., suitability percentage of maximum rate)
\item \code{iter}:  a factor determining the TPC identity from bootstrapping procedure in
\code{predict_curves()} function, or \code{estimate} when it represents the estimated TPC fitted in
\code{fit_devmodels()}.
}
}
\description{
Calculate thermal boundaries delimiting the optimal region of the fitted TPC.
}
\examples{

data("b.schwartzi_satar2002")

fitted_tpcs_bschwartzi <- fit_devmodels(temp = b.schwartzi_satar2002$temperature,
                                      dev_rate = b.schwartzi_satar2002$rate_value,
                                      model_name = "all")

plot_devmodels(temp = b.schwartzi_satar2002$temperature,
               dev_rate = b.schwartzi_satar2002$rate_value,
               fitted_parameters = fitted_tpcs_bschwartzi,
               species = "Brachycaudus swartzi",
               life_stage = "Nymphs") #choose "briere2", "thomas" and "lactin2"

#3. Obtain prediction TPCs with bootstraps for propagating uncertainty:
tpc_preds_boots_bschwartzi <- predict_curves(temp = b.swartzi_satar2002$temperature,
                                             dev_rate = b.swartzi_satar2002$rate_value,
                                             fitted_parameters = fitted_tpcs_bswartzi,
                                             model_name_2boot = c("briere2", "thomas", "lactin2"),
                                             propagate_uncertainty = TRUE,
                                             n_boots_samples = 100)


head(tpc_preds_boots_bschwartzi)

#4. Plot bootstrapped curves:

plot_uncertainties(bootstrap_uncertainties_tpcs = tpc_preds_boots_bschwartzi,
                   temp = b.swartzi_satar2002$temperature,
                   dev_rate = b.swartzi_satar2002$rate_value,
                   species = "Brachycaudus schwartzi",
                   life stage = "Nymphs")

#5. Calculate Q80 thermal bounds

boundaries_bschwartzi <- therm_suitability_bounds(preds_tbl = tpc_preds_boots_bschwartzi,
                                                  model_name = "lactin2",
                                                  suitability_threshold = 80)
head(boundaries_bschwartzi)

}
